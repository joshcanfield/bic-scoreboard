description = "Bremerton Ice Arena ScoreBoard"

apply plugin: "java"
apply plugin: "idea"
apply plugin: 'groovy'
apply plugin: 'application'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

group = "canfield.josh"
version = "1.1"

application {
    mainClass = 'canfield.bia.ServiceMain'
}

project.ext {
    jackson = [version: "1.9.9"]
    jetty = [version: "8.1.12.v20130726"]
    resteasy = [version: "3.0.4.Final"]
}

repositories {
    mavenCentral()
}

// This simulates Maven's "provided" scope, until it is officially supported by Gradle
// See http://jira.codehaus.org/browse/GRADLE-784

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    test {
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided
    }
}

dependencies {
    implementation "com.squareup.dagger:dagger:1.1.0"
    // Dagger compiler is compile-time only; keep as annotation processor, not runtime
    annotationProcessor "com.squareup.dagger:dagger-compiler:1.1.0"

    implementation "com.github.purejavacomm:purejavacomm:1.0.1.RELEASE"

    implementation "joda-time:joda-time:2.1"

    implementation 'ch.qos.logback:logback-classic:1.1.2'
    implementation 'org.slf4j:jul-to-slf4j:1.7.10'

    implementation "org.eclipse.jetty:jetty-server:${project.jetty.version}"
    implementation "org.eclipse.jetty:jetty-servlet:${project.jetty.version}"


    implementation ("org.jboss.resteasy:resteasy-jaxrs:${project.resteasy.version}" ) {
        exclude group: 'org.slf4j'
    }
    implementation "org.jboss.resteasy:resteasy-jackson-provider:${project.resteasy.version}"

    implementation "org.codehaus.jackson:jackson-mapper-asl:${project.jackson.version}"
    implementation "org.codehaus.jackson:jackson-jaxrs:${project.jackson.version}"
    implementation 'commons-io:commons-io:2.11.0'

    // Lightweight native WebSocket server for modern UI transport
    implementation 'org.java-websocket:Java-WebSocket:1.5.6'

    testImplementation "org.codehaus.groovy:groovy-all:2.0.5"
    testImplementation "org.testng:testng:7.10.2"
    testImplementation "org.mockito:mockito-all:1.9.5"

    testImplementation('org.seleniumhq.selenium:selenium-java:4.35.0') { // https://www.selenium.dev/downloads/
        exclude group: 'org.eclipse.jetty'
    }

    testImplementation 'io.github.bonigarcia:webdrivermanager:5.9.2'

    testImplementation 'io.cucumber:cucumber-java:7.14.0'
    testImplementation 'io.cucumber:cucumber-testng:7.14.0'
}

distributions {
    main {
        distributionBaseName = 'scoreboard'
        contents {
            exclude("logs")
        }
    }
}

test {
    useTestNG()

    //options.suites("src/test/conf/testng.xml")

    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED', '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED', '--add-opens', 'java.base/java.util=ALL-UNNAMED'

    enableAssertions = true
}
tasks.named('run') {
    args 'start'
    workingDir = file('src/main/dist')
}
tasks.named('wrapper') {
    gradleVersion = '8.7'
}
